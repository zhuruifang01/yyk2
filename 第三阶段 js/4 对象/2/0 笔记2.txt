8.25
一：javascript对象的分类：
   1.内置对象：goble Math对象
      Math.random() //取随机数
   2.本地对象（需要实例化的对象都为本地对象）
      Function
      Array
      Object
      Number   String   Boolean 
      Date()
      正则 RegExp();
   3.宿主对象：（BOM,DOM）
     浏览器的环境下。
====================================================
二。Math对象：
 1、属性：
  constructor 返回构造函数的引用;
  Math.PI; 
 2.方法：
   （1）取绝对值：Math.abs(num);

    (2) 四舍五入：Math.round(num);
      parseInt(num);//取整数
    (3) 向上取整：Math.ceil(num);
    (4) 向下取整：Math.floor(num);

    (5) 取最大值：Math.max(num1,num2,...)
          最小值：Math.min(num1,num2,...)

    (6)随机数：  Math.random()     【0到1】
                 Math.random()*10  【0到10】 
                 Math.floor(Math.random()*16-8) 【-8到8的整数】
    (7)三角函数：
       1）正弦：Math.sin（弧度）;          对边/斜边
                30度角的弧度：2*Math.PI/360*30

       2) 余弦：Math.cos（弧度）; 
       3）正切：Math.tan（弧度）; 


    (8)几次幂：
        Math.pow(x,y)   //【x是底数，y是次数】
   （9）开平方跟：
         Math.sqrt(num)

    (10) numberObj.toFixed(2)    // 【四舍五入后保留2位小数】
         例：Math.PI.toFixed(3) //3.141
========================================================
三：string对象
 1.属性：
  1）length //字符个数
  2) constructor
 2.方法：
   获取类型：
     1）mystr.charAt(下标数字);   //返回指定位置的字符
     2）mystr.charCodeAt(下标);   //返回指定位置的字符的ASCII值

     3）String.fromCharCode(编码1,编码2,编码3)
                //返回编码（ASCII值）所对应的字符

   查找类型：
      1）mystr.indexOf("字符");
             //返回指定字符第一次出现的位置
             //如果字符不存在，返回-1；

      2) mystr.lastIndexOf("字符");
             //返回指定字符最后一次出现的位置
             //如果字符不存在，返回-1；

      3) mystr.match(字符); 
            //如果有这个字符，返回这个字符
            //没有，返回null

      4) mystr.replace(被替换的字符，新字符)
            //返回新字符串。不会影响原字符串。

   截取类型：
      1）mystr.slice(start,end);
        //从指定的位置()开始，到指定的结束位置之前停止截取，结果为截取的字符串，不影响原字符串
        //支持负数
      2）mystr.substring(start,end); 
      3）mystr.substr(start,length);
          //从指定位置开始，截取指定长度。//不支持负数。
   转换类型：
      1）mystr.split("分隔符",length);
           //将字符串按指定分隔符转换为数组，length为保留的数组元素个数
           【将分隔符替换为数组中的逗号】
      2）mystr.toLowerCase();  //英文字母转化为小写
      3）mystr.toUpperCase();  //英文字母转化为大写
======================================================================
四：数组对象：
  1.属性：
    length
    constructor
  2.方法：
    添加删除类
     1）myarr.push(23,34,45);   
            //从后面添加元素,返回数组长度。//会影响原数组
     2）myarr.pop();
            //从后面删除[一个]元素,返回值为删除的元素。//会影响原数组

     3）myarr.unshift(99,100);    
            //从前面添加元素,返回数组长度。//会影响原数组
     4) myarr.shift(); 
            //从前面删除[一个]元素,返回值为删除的元素。//会影响原数组

     5）myarr.splice(index,数量,添加的元素1,添元素2，添元素3);             //万能的添加删除函数

        理解：
        index:要操作(开始)的位置（下标）
        数量：若为0：     表示添加。    返回值为空白。
              若为其他数：删除的个数。  返回值是删除的元素。
   转换：
    数组转化为字符串
      myarr.join("分隔符");  
            //返回新字符串。//不会影响原数组
            //分隔符会替换逗号 （参数不传时默认逗号）
   截取：
      myarr.slice();

   数组的连接：
      myarr.concat(arr1,arr2);
            //返回原数组 加上 数组1和数组2  //不会影响原数组

   数组的排序：
     myarr.sort(callback);
       //callback省略时，按字符ASCII值排序；
       //callback写：function(x,y){return x-y;}  //升序
                   function(x,y){return y-x;}  //降序
=========================================================
