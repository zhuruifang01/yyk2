
                              对象笔记
一：javascript语言（脚本）：
  1、对象的概念：一切皆对象;
  2、属性：事物的特征；（数据类型中除了函数以外都 可以描述属性）
     方法：事物的功能或动作;（用函数来描述）
  3、java: class(类)
        先有的对象，才有的类;
        类是对象的抽象，对象是类的具体化（实例化）;
     javascript:没有类 代替类的叫做构造器;
      设计稿--->工厂（生产）--->手机
       类
       构造器（手机里的每个小零件）

二：对象的创建：                                                       
  1、用new关键字：
    格式：var obj=new Object();       
  2、jason(节省)
    格式：var obj={};              【键值对】
  3、构造器（构造函数）
    格式：function person(){};
          var lisi=new person();

三：添加属性和方法：
  添加属性：
      对象.属性名=属性值;
      对象["属性名"]=属性值;
  添加方法：
    对象.方法名=function(){}
    对象["方法名"]=function(){}

四：访问属性和方法：
   属性：
    1.对象.属性名
    2.对象["属性名"]
   方法：
     1.对象.方法名（）;
     2.对象["方法名"]（）;
五：删除对象的某一个属性或方法：
   delete 对象.属性名;
六：销毁一个对象：
   对象=null;
七：对象的遍历：
   for in
   for(var i in arr)  【i:下标   arr[i]:数组元素】
   for(var i in obj)  【i:对象的属性名  obj[i]:属性值】
八：对象在内存中的存储：
==============================
九：对象的特性：
  1.继承：一个对象可以继承另一个对象。
     
   （1）只有原型可以实现继承。
      【一个构造函数只可以添加一个原型；
        一个实例化对象可以有多个原型（因为一个对象可以有多个构造函数）】
   （2）原型链：多个原型形成的链，只要是链上的方法，


  2.封装：
    方式：
    1）工厂函数：
    2）构造函数(constructor):(会造成内存的浪费)

    3）原型(prototype)：解决内存的浪费问题
      【封装+继承】
       构造函数可以添加一个原型，在原型里添加方法。
       原型里的方法可以共享给子对象。
       【方法是在代码块中存储。】
    4）混合型：
        构造函数（只写共有的属性）
        原型函数（只写共有的方法）
       
  3.多态
===============================
十：this 的指向：
  1.普通函数：this指window对象
  2.构造函数：this指实例化对象
  3.方法中：哪个对象调用了这个方法，this就指哪个对象。
  4.事件中：this指事件被触发的对象。
  5.call()和apply() 改变指针方向
    1）call(对象，参数1，参数2，...)
       如果对象省略了，this指window
    2)apply(对象，[参数1，])